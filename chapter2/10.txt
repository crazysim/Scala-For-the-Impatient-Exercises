scala> def pow(x: Int, n: Int): Int = {
     | if (n % 2 == 0 && n > 0)
     | pow(pow(x, n/2),2)
     | else if (n % 2 == 1 && n > 0)
     | x * pow(x, n-1)
     | else if (n < 0)
     | 1 / pow(x, -n)
     | else
     | 1
     | }
pow: (x: Int, n: Int)Int

scala> pow(1,2)
Execution interrupted by signal.


scala> pow(1,1)
res10: Int = 1

scala> pow(2,1)
res11: Int = 2

scala> 
// She's gone rogue, captain! Have to take her out!
// Calling Thread.stop on runaway Thread[Thread-21,5,main] with offending code:
// scala> pow(1,2)

scala> pow(2,0)
res12: Int = 1

scala> 4/2
res13: Int = 2


// This doesn't work, I don't know why. It probably has something to do with
// integers and division or soemthing. I think I got the idea anyway. Ugh. Need
// to put through debugger like intellij
